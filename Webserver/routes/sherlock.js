var express = require('express');
var router = express.Router();
var rateLimit = require('express-rate-limit');

var Sherlock = require("../models/sherlock_db");

const limiter = rateLimit({
	windowMs: 60 * 60 * 1000, // 15 minutes
	max: 100, // Limit each IP to 100 requests per `window` (here, per 15 minutes)
	message: 'Too many request sent from the same IP. Try again later...',
    standardHeaders: true, // Return rate limit info in the `RateLimit-*` headers
	legacyHeaders: false, // Disable the `X-RateLimit-*` headers
});

router.get('/', (req, res, next) => {
    res.render('sherlock', {title: 'Cyberium - Sherlock'})
});

router.get("/retrieve_user/:username", limiter, async (req, res, next) => {
    var username = req.params.username; 
    var result = await Sherlock.retrieveData(username);
    if(result !== "Fetching...") return res.send(result);
    res.sendStatus(420);
});

router.get("/check_user/:username", async (req, res, next) => {
    var username = req.params.username;
    var result = await Sherlock.checkDatabase(username);
    if(result !== "Fetching...") return res.send(result);
    res.sendStatus(420);
})

module.exports = router;
